name: simple
kind: statefulset
replicaCount: 1
serviceAccountName: sa
updateStrategy: {}
command:
  - test-command
args: ["few", "args"]
image:
  repository: nginx
  tag: latest
  pullPolicy: IfNotPresent
initContainers:
  - name: sync
    image: gcr.io/google_containers/git-sync
    env:
      - name: GIT_SYNC_REPO
        value: https://github.com/StreamLayer/sl-chat-auth.git
      - name: GIT_SYNC_USERNAME
        value: user
      - name: GIT_SYNC_PASSWORD
        value: password
      - name: GIT_SYNC_ROOT
        value: /repo
      - name: GIT_SYNC_ONE_TIME
        value: "true"
    volumeMounts:
      - name: chat-auth
        mountPath: /repo
additionalContainers:
  - name: sync
    image: gcr.io/google_containers/git-sync
    env:
      - name: GIT_SYNC_REPO
        value: https://github.com/StreamLayer/sl-chat-auth.git
      - name: GIT_SYNC_USERNAME
        value: user
      - name: GIT_SYNC_PASSWORD
        value: password
      - name: GIT_SYNC_ROOT
        value: /repo
      - name: GIT_SYNC_ONE_TIME
        value: "true"
    volumeMounts:
      - name: chat-auth
        mountPath: /repo
volumes:
  - name: chat-auth
    emptyDir: {}
volumeMounts:
  - name: chat-auth
    mountPath: /some
env:
  - name: TEST
    value: test
service:
  type: ClusterIP
  ports:
    - name: http
      port: 8080
disruptionBudget:
  minAvailable: 1
resources:
  requests:
    memory: 100Mi
    cpu: 10m
  limits:
    memory: 512Mi
    cpu: 500m

securityContext:
  runAsUser: 1000
  allowPrivilegeEscalation: true

podAnnotations:
  sidecar.istio.io/proxyCPU: "600m"
  sidecar.istio.io/proxyMemory: "512Mi"

deploymentAnnotations:
  oops.makeomatic.co/oops: "YEAH"

statefulsetExtraAnnotations:
  idid.it.again/nope: "noooah"

toolchain:
  monitoring:
    enabled: true
    operator: true
  istio:
    enabled: true
    virtualService:
      gateways:
      - staging-wild
      hosts:
      - grpc.staging.streamlayer.io
      http:
      - route:
        - destination:
            host: grpc
            port:
              number: 50051
  config:
    path: /config
    files:
      qwe.txt: |-
        some: test
        test: {{ .Values.toolchain.consul.path }}
  consul:
    path: /config
    templates:
      config.yml: |-
        amqp:
          host: {{ keyOrDefault "staging/amqpHost" "localhost" }}
          password: {{ keyOrDefault "staging/amqpPassword" "password" }}
        redis:
          settings:
            host: {{ keyOrDefault "staging/redisHost" "redishost" }}
  haproxyIngress:
    ingressClass: haproxy
    annotations:
      haproxy.com/check: "true"
      haproxy.com/check-interval: "1000"
    spec:
      tls:
        - hosts:
            - api.host.com
          secretName: "wild-crt"
      rules:
        - host: api.host.com
          http:
            paths:
            - path: /
              pathType: Prefix
              backend:
                service:
                  name: srv
                  port:
                    number: 8080
